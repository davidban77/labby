name: Publish PyPI

on:
  release:
    types: [published]

jobs:
  build-images:
    runs-on: ubuntu-latest
    env:
      PYTHON_VER: "3.8"
    steps:
      # Checkout the code from the repo
      - name: Checkout repo
        uses: actions/checkout@v3
      # Setup the python version, and dependencies
      - name: Set Up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      # Installing and configuring poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cache venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies (if no cache)
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      # Job
      - name: Set Token
        run: poetry config pypi-token.pypi "${{ secrets.PYPI_API_KEY }}"

      - name: Publish to PyPI
        run: poetry publish --build
